#Python


#Takes the combined Phyca11 gff file, which was made by Gaetan Thilliez. nr including CRN and RxLR effectors
#Reads in each line and amends the start & stop position to match 1000 bases upstream
#Before doing so, some checks are needed.


fh = open('141027_Phyca11_effector.gtf', 'r')

data = [l.strip().split("\t") for l in fh.readlines()]
 
#turn  file into a dictionary
d = {}
for scaff, aff, cds, start, stop, dotA, strand, frame, attributes in data:
	ID= scaff+"_"+start+"_"+stop
# Only add those exons to the dictionary that are bordering on the upstream region
	if aff == "UoD":
		d[ID] = [scaff, aff, cds, start, stop, dotA, strand, frame, attributes]			
	elif attributes.strip().split("; ")[2] ==  'exonNumber=1':
		d[ID] = [scaff, aff, cds, start, stop, dotA, strand, frame, attributes]
print d
print len(d)
#d has same lenght as fasta file generated by from this gft. Now amend the start positions 

	




#turn file into a dictionary and amend start/stop to match ur
d2 = {}
for scaff, aff, cds, start, stop, dotA, strand, frame, attributes in data:
	ID= scaff+"_"+start+"_"+stop
# Only add those exons to the dictionary that are bordering on the upstream region
	if aff == "UoD":
		if start > stop:
			stop = start
			start = stop
		if strand == "+":
			start_ur = int(start)-1000
			stop_ur = int(start)-1
			if start_ur < 1:
				start_ur = 1
			d2[ID] = [scaff, aff, cds, start_ur, stop_ur, dotA, strand, frame, attributes]
		if strand == "-":
			stop_ur = int(stop)+1000
			start_ur = int(stop)+1
			if start_ur < 1:
				start_ur = 1
			d2[ID] = [scaff, aff, cds, start_ur, stop_ur, dotA, strand, frame, attributes]			
	elif attributes.strip().split("; ")[2] ==  'exonNumber=1':
		if strand == "+":
			start_ur = int(start)-1000
			stop_ur = int(start)-1
			if start_ur < 1:
				start_ur = 1
			d2[ID] = [scaff, aff, cds, start_ur, stop_ur, dotA, strand, frame, attributes]
		if strand == "-":
			stop_ur = int(stop)+1000
			start_ur = int(stop)+1
			if start_ur < 1:
				start_ur = 1
			d2[ID] = [scaff, aff, cds, start_ur, stop_ur, dotA, strand, frame, attributes]
	
print d2
print len(d2)
## This works for gaetans non redundant gtf file.
## Now edit to work with the redundant microarray file? 

import csv
w = csv.writer(open("141027_Phyca11_effector_Up.gtf", "w"), delimiter = "\t")
for key, val in d2.items():
    w.writerow(val)              

